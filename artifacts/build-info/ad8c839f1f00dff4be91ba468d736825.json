{
  "id": "ad8c839f1f00dff4be91ba468d736825",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.5.9",
  "solcLongVersion": "0.5.9+commit.c68bc34e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/v2/contracts_common/Interfaces/ERC1654.sol": {
        "content": "pragma solidity ^0.5.2;\n\ncontract ERC1654 {\n\n    /**\n    * @dev Should return whether the signature provided is valid for the provided hash\n    * @param hash 32 bytes hash to be signed\n    * @param signature Signature byte array associated with hash\n    * @return 0x1626ba7e if valid else 0x00000000\n    */\n    function isValidSignature(bytes32 hash, bytes memory signature)\n        public\n        view\n        returns (bytes4 magicValue);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 2000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/v2/contracts_common/Interfaces/ERC1654.sol": {
        "ERC1654": {
          "abi": [
            {
              "constant": true,
              "inputs": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "isValidSignature",
              "outputs": [
                {
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {
              "isValidSignature(bytes32,bytes)": {
                "details": "Should return whether the signature provided is valid for the provided hash",
                "params": {
                  "hash": "32 bytes hash to be signed",
                  "signature": "Signature byte array associated with hash"
                },
                "return": "0x1626ba7e if valid else 0x00000000"
              }
            }
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "isValidSignature(bytes32,bytes)": "1626ba7e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.c68bc34e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash\",\"params\":{\"hash\":\"32 bytes hash to be signed\",\"signature\":\"Signature byte array associated with hash\"},\"return\":\"0x1626ba7e if valid else 0x00000000\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/v2/contracts_common/Interfaces/ERC1654.sol\":\"ERC1654\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/v2/contracts_common/Interfaces/ERC1654.sol\":{\"content\":\"pragma solidity ^0.5.2;\\n\\ncontract ERC1654 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided hash\\n    * @param hash 32 bytes hash to be signed\\n    * @param signature Signature byte array associated with hash\\n    * @return 0x1626ba7e if valid else 0x00000000\\n    */\\n    function isValidSignature(bytes32 hash, bytes memory signature)\\n        public\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0xa5a9f130315c41a3578c374651fedc45de45cf66e442442e1c6e3b5fab896db6\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "sources": {
      "contracts/v2/contracts_common/Interfaces/ERC1654.sol": {
        "ast": {
          "absolutePath": "contracts/v2/contracts_common/Interfaces/ERC1654.sol",
          "exportedSymbols": {
            "ERC1654": [
              11
            ]
          },
          "id": 12,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 11,
              "linearizedBaseContracts": [
                11
              ],
              "name": "ERC1654",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": "@dev Should return whether the signature provided is valid for the provided hash\n@param hash 32 bytes hash to be signed\n@param signature Signature byte array associated with hash\n@return 0x1626ba7e if valid else 0x00000000",
                  "id": 10,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidSignature",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "name": "hash",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "337:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "337:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "351:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "351:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "336:38:0"
                  },
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "name": "magicValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "420:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:19:0"
                  },
                  "scope": 11,
                  "src": "311:128:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 12,
              "src": "25:416:0"
            }
          ],
          "src": "0:442:0"
        },
        "id": 0
      }
    }
  }
}
